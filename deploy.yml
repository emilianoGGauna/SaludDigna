name: CI/CD Streamlit â†’ Azure VM

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      KEY_VAULT_NAME: sdignakeys
      SECRET_NAMES: SERVER,DATABASE,USER,PASSWORD,DRIVER

    steps:
    # 1) Clonar
    - uses: actions/checkout@v3

    # 2) Instalar dependencias Python para tests/linters
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dev requirements
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest

    - name: Lint & Test
      run: |
        flake8 .
        pytest

    # 3) Login a Azure (Service Principal)
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: false

    # 4) Obtener secretos de Key Vault
    - name: Download secrets from Key Vault
      id: keyvault
      uses: azure/get-keyvault-secrets@v1
      with:
        keyvault: ${{ env.KEY_VAULT_NAME }}
        secrets: ${{ env.SECRET_NAMES }}

    # 5) Empaquetar app y copiar a VM via SSH
    - name: Build package
      run: zip -r app.zip app.py requirements.txt SecretKeys.py

    - name: Copy package to Azure VM
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
        source: "app.zip"
        target: "~/deploy/"

    # 6) Ejecutar despliegue en VM por SSH
    - name: Deploy on VM
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
        script: |
          set -e
          cd ~/deploy
          unzip -o app.zip

          # Crea o actualiza tu virtualenv
          python3 -m venv .venv
          source .venv/bin/activate

          # Exportar secretos como variables
          for sec in SERVER DATABASE USER PASSWORD DRIVER; do
            export $sec="${{ steps.keyvault.outputs[sec] }}"
          done
          export KEY_VAULT_URL="https://${{ env.KEY_VAULT_NAME }}.vault.azure.net/"

          # Instalar requisitos y reiniciar app
          pip install --upgrade pip
          pip install -r requirements.txt

          # Parar la instancia anterior (si existe)
          pkill -f "streamlit run app.py" || true

          # Lanzar en background con nohup
          nohup streamlit run app.py \
            --server.port 8501 \
            --server.address 0.0.0.0 \
            > streamlit.log 2>&1 &
